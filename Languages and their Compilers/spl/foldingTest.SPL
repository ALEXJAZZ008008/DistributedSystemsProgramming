ProgFolding:

DECLARATIONS

i, integer OF TYPE INTEGER;

CODE

	1 -> i;
	
	WRITE ( (36+1) ); NEWLINE;
	WRITE ( (33-2) ); NEWLINE;
	WRITE ( (36.1+1.1) ); NEWLINE;
	WRITE ( (37.1-2.2) ); NEWLINE;
	WRITE ( ('a'+3) ); NEWLINE;
	WRITE ( ('b'-4) ); NEWLINE;
	WRITE ( (38*2) ); NEWLINE;
	WRITE ( (39/3) ); NEWLINE;
	WRITE ( (35.1*1.1) ); NEWLINE;
	WRITE ( (36.1/1.2) ); NEWLINE;
	WRITE ( ('c'*3) ); NEWLINE;
	WRITE ( ('d'/2) ); NEWLINE;
	WRITE ( (32+3+4) ); NEWLINE;
	WRITE ( (38-5-3) ); NEWLINE;
	WRITE ( (35.1+6.7+3.4) ); NEWLINE;
	WRITE ( (39.7-4.2-3.2) ); NEWLINE;
	WRITE ( (34+3*1) ); NEWLINE;
	WRITE ( (32-6/5) ); NEWLINE;
	WRITE ( (32.2+3.6*5.4) ); NEWLINE;
	WRITE ( (32.14-5.2/3.2) ); NEWLINE;
	WRITE ( (i+1) ); NEWLINE;
	WRITE ( (i-1) ); NEWLINE;
	WRITE ( (i*1) ); NEWLINE;
	WRITE ( (i/1) ); NEWLINE;
	WRITE ( (i+1.1) ); NEWLINE;
	WRITE ( (i-1.1) ); NEWLINE;
	WRITE ( (i*1.1) ); NEWLINE;
	WRITE ( (i/1.1) ); NEWLINE;
	WRITE ( (i+'a') ); NEWLINE;
	WRITE ( (i-'a') ); NEWLINE;
	WRITE ( (i*'a') ); NEWLINE;
	WRITE ( (i/'a') ); NEWLINE;
	WRITE ( ('a'+i) ); NEWLINE;
	WRITE ( ('a'-i) ); NEWLINE;
	WRITE ( ('a'*i) ); NEWLINE;
	WRITE ( ('a'/i) ); NEWLINE;
	WRITE ( ('a'+i+'a') ); NEWLINE;
	WRITE ( ('a'-i-'a') ); NEWLINE;
	WRITE ( ('a'*i*'a') ); NEWLINE;
	WRITE ( ('a'/i/'a') ); NEWLINE;
	
	(36+1) -> i;
	WRITE ( i ); NEWLINE;
	(33-2) -> i;
	WRITE ( i ); NEWLINE;
	(36.1+1.1) -> i;
	WRITE ( i ); NEWLINE;
	(37.1-2.2) -> i;
	WRITE ( i ); NEWLINE;
	
	FOR integer IS (1 - 1) BY (2 / 2) TO (3 + 3) DO
		WRITE(integer); NEWLINE
    ENDFOR
	
ENDP ProgFolding.
